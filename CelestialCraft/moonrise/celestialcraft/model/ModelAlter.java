// Date: 2013-11-03 �ㅽ썑 1:24:01
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package moonrise.celestialcraft.model;

import moonrise.celestialcraft.ModInfo;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelAlter extends ModelBase
{
	static float cubeX = 0.7853982F;
	static float cubeY = 2.398021F;
	static float cubeZ = 0.5934119F;
	static float coreY = 0.4613246F;
	
  //fields
    ModelRenderer base1;
    ModelRenderer base2;
    ModelRenderer pole1;
    ModelRenderer pole2;
    ModelRenderer pole3;
    ModelRenderer pole4;
    ModelRenderer cube1;
    ModelRenderer cube2;
    ModelRenderer cube3;
    ModelRenderer cube4;
    ModelRenderer cube5;
    ModelRenderer cube6;
    ModelRenderer cube7;
    ModelRenderer cube8;
    ModelRenderer cube9;
    ModelRenderer cube10;
    ModelRenderer cube11;
    ModelRenderer cube12;
    ModelRenderer core;
  
  public ModelAlter()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      base1 = new ModelRenderer(this, 0, 0);
      base1.addBox(-6F, 0F, -6F, 12, 1, 12);
      base1.setRotationPoint(8F, 2F, 8F);
      base1.setTextureSize(64, 32);
      base1.mirror = true;
      setRotation(base1, 0F, 0F, 0F);
      base2 = new ModelRenderer(this, 0, 13);
      base2.addBox(-4.5F, 0F, -4.5F, 9, 1, 9);
      base2.setRotationPoint(8F, 3F, 8F);
      base2.setTextureSize(64, 32);
      base2.mirror = true;
      setRotation(base2, 0F, 0.7853982F, 0F);
      pole1 = new ModelRenderer(this, 49, 0);
      pole1.addBox(0F, 0F, 0F, 1, 11, 1);
      pole1.setRotationPoint(1F, 2F, 14F);
      pole1.setTextureSize(64, 32);
      pole1.mirror = true;
      setRotation(pole1, 0F, 0F, 0F);
      pole2 = new ModelRenderer(this, 49, 0);
      pole2.addBox(0F, 0F, 0F, 1, 11, 1);
      pole2.setRotationPoint(14F, 2F, 1F);
      pole2.setTextureSize(64, 32);
      pole2.mirror = true;
      setRotation(pole2, 0F, 0F, 0F);
      pole3 = new ModelRenderer(this, 49, 0);
      pole3.addBox(0F, 0F, 0F, 1, 11, 1);
      pole3.setRotationPoint(14F, 2F, 14F);
      pole3.setTextureSize(64, 32);
      pole3.mirror = true;
      setRotation(pole3, 0F, 0F, 0F);
      pole4 = new ModelRenderer(this, 49, 0);
      pole4.addBox(0F, 0F, 0F, 1, 11, 1);
      pole4.setRotationPoint(1F, 2F, 1F);
      pole4.setTextureSize(64, 32);
      pole4.mirror = true;
      setRotation(pole4, 0F, 0F, 0F);
      cube1 = new ModelRenderer(this, 34, 30);
      cube1.addBox(-3.5F, 2.5F, -3.5F, 7, 1, 1);
      cube1.setRotationPoint(8F, 11F, 8F);
      cube1.setTextureSize(64, 32);
      cube1.mirror = true;
      setRotation(cube1, 0.7853982F, 2.398021F, 0.5934119F);
      cube2 = new ModelRenderer(this, 34, 30);
      cube2.addBox(-3.5F, -3.5F, 2.5F, 7, 1, 1);
      cube2.setRotationPoint(8F, 11F, 8F);
      cube2.setTextureSize(64, 32);
      cube2.mirror = true;
      setRotation(cube2, 0.7853982F, 2.398021F, 0.5934119F);
      cube3 = new ModelRenderer(this, 34, 30);
      cube3.addBox(-3.5F, 2.5F, 2.5F, 7, 1, 1);
      cube3.setRotationPoint(8F, 11F, 8F);
      cube3.setTextureSize(64, 32);
      cube3.mirror = true;
      setRotation(cube3, 0.7853982F, 2.398021F, 0.5934119F);
      cube4 = new ModelRenderer(this, 28, 24);
      cube4.addBox(-3.5F, -3.5F, -3.5F, 1, 7, 1);
      cube4.setRotationPoint(8F, 11F, 8F);
      cube4.setTextureSize(64, 32);
      cube4.mirror = true;
      setRotation(cube4, 0.7853982F, 2.398021F, 0.5934119F);
      cube5 = new ModelRenderer(this, 28, 24);
      cube5.addBox(2.5F, -3.5F, 2.5F, 1, 7, 1);
      cube5.setRotationPoint(8F, 11F, 8F);
      cube5.setTextureSize(64, 32);
      cube5.mirror = true;
      setRotation(cube5, 0.7853982F, 2.398021F, 0.5934119F);
      cube6 = new ModelRenderer(this, 28, 24);
      cube6.addBox(2.5F, -3.5F, -3.5F, 1, 7, 1);
      cube6.setRotationPoint(8F, 11F, 8F);
      cube6.setTextureSize(64, 32);
      cube6.mirror = true;
      setRotation(cube6, 0.7853982F, 2.398021F, 0.5934119F);
      cube7 = new ModelRenderer(this, 28, 24);
      cube7.addBox(-3.5F, -3.5F, 2.5F, 1, 7, 1);
      cube7.setRotationPoint(8F, 11F, 8F);
      cube7.setTextureSize(64, 32);
      cube7.mirror = true;
      setRotation(cube7, 0.7853982F, 2.398021F, 0.5934119F);
      cube8 = new ModelRenderer(this, 10, 24);
      cube8.addBox(-3.5F, -3.5F, -3.5F, 1, 1, 7);
      cube8.setRotationPoint(8F, 11F, 8F);
      cube8.setTextureSize(64, 32);
      cube8.mirror = true;
      setRotation(cube8, 0.7853982F, 2.398021F, 0.5934119F);
      cube9 = new ModelRenderer(this, 10, 24);
      cube9.addBox(2.5F, 2.5F, -3.5F, 1, 1, 7);
      cube9.setRotationPoint(8F, 11F, 8F);
      cube9.setTextureSize(64, 32);
      cube9.mirror = true;
      setRotation(cube9, 0.7853982F, 2.398021F, 0.5934119F);
      cube10 = new ModelRenderer(this, 10, 24);
      cube10.addBox(2.5F, -3.5F, -3.5F, 1, 1, 7);
      cube10.setRotationPoint(8F, 11F, 8F);
      cube10.setTextureSize(64, 32);
      cube10.mirror = true;
      setRotation(cube10, 0.7853982F, 2.398021F, 0.5934119F);
      cube11 = new ModelRenderer(this, 10, 24);
      cube11.addBox(-3.5F, 2.5F, -3.5F, 1, 1, 7);
      cube11.setRotationPoint(8F, 11F, 8F);
      cube11.setTextureSize(64, 32);
      cube11.mirror = true;
      setRotation(cube11, 0.7853982F, 2.398021F, 0.5934119F);
      cube12 = new ModelRenderer(this, 34, 30);
      cube12.addBox(-3.5F, -3.5F, -3.5F, 7, 1, 1);
      cube12.setRotationPoint(8F, 11F, 8F);
      cube12.setTextureSize(64, 32);
      cube12.mirror = true;
      setRotation(cube12, 0.7853982F, 2.398021F, 0.5934119F);
      core = new ModelRenderer(this, 0, 23);
      core.addBox(-1F, -1F, -1F, 2, 2, 2);
      core.setRotationPoint(8F, 11F, 8F);
      core.setTextureSize(64, 32);
      core.mirror = true;
      setRotation(core, 0F, 0.4613246F, 0F);
  }
  
  public void render(float cubeRot, float coreRot, float f5)
  {
    setRotationAngles(cubeRot, coreRot, f5);
    base1.render(f5);
    base2.render(f5);
    pole1.render(f5);
    pole2.render(f5);
    pole3.render(f5);
    pole4.render(f5);
    cube1.render(f5);
    cube2.render(f5);
    cube3.render(f5);
    cube4.render(f5);
    cube5.render(f5);
    cube6.render(f5);
    cube7.render(f5);
    cube8.render(f5);
    cube9.render(f5);
    cube10.render(f5);
    cube11.render(f5);
    cube12.render(f5);
    core.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
    if (model.rotateAngleX >= ModInfo.PI *2)
    	model.rotateAngleX -= ModInfo.PI *2;
    if (model.rotateAngleY >= ModInfo.PI *2)
    	model.rotateAngleY -= ModInfo.PI *2;
    if (model.rotateAngleZ >= ModInfo.PI *2)
    	model.rotateAngleZ -= ModInfo.PI *2;
  }
  
  public void setRotationAngles(float cubeRot, float coreRot, float f5)
  {
	  this.setRotation(this.cube1, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube2, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube3, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube4, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube5, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube6, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube7, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube8, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube9, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube10, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube11, cubeX, cubeY + cubeRot, cubeZ);
	  this.setRotation(this.cube12, cubeX, cubeY + cubeRot, cubeZ);
	  
	  this.setRotation(this.core, 0, coreY + coreRot, 0);
  }

}
